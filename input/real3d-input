#
# BEC-GP-OMP codes are developed and (c)opyright-ed by:
#
# Luis E. Young-S., Sadhan K. Adhikari
# (UNESP - Sao Paulo State University, Brazil)
#
# Paulsamy Muruganandam
# (Bharathidasan University, Tamil Nadu, India)
#
# Dusan Vudragovic, Antun Balaz
# (Scientific Computing Laboratory, Institute of Physics Belgrade, Serbia)
#
# Public use and modification of this code are allowed provided that the
# following three papers are cited:
#
# [1] L. E. Young-S. et al., Comput. Phys. Commun. 204 (2016) 209.
# [2] P. Muruganandam, S. K. Adhikari, Comput. Phys. Commun. 180 (2009) 1888.
# [3] D. Vudragovic et al., Comput. Phys. Commun. 183 (2012) 2021.
#
# The authors would be grateful for all information and/or comments
# regarding the use of the code.
#

# Parameter input file for solving the time-dependent Gross–Pitaevskii
# nonlinear partial differential equation in three-dimensional anisotropic
# trap by real time propagation using split-step Crank-Nicolson method.

#  Type of rescaling of Gross–Pitaevskii equation.
#  Possible values: 1 or 2.
#  Required: yes
#  Type: int
   OPTION = 2

#  Coefficient of the nonlinear term. If not defined, G0 is calculated as
#     G0 = 4 * Pi * AS * NATOMS * a0
#  where AS is contact interaction strength, NATOMS number of atoms in
#  condensate, and a0 Bohr radius.
#  Required: no
#  Type: double
#   G0 = 22.454

#  Coefficient that multiplies nonlinear term in non-stationary problem during
#  final NRUN iterations.
#  Required: yes
#  Type: double
   GPAR = 1.0

#  Number of atoms in condensate. Required if G0 is not defined.
#  Required: conditionally
#  Type: long
   NATOMS = 80000

#  Unit of length. Required if G0 is not defined.
#  Required: conditionally
#  Type: double
   AHO = 1.22823e-6

#  Contact interaction strength in units of Bohr radius. Required if G0 is not
#  defined.
#  Required: conditionally
#  Type: double
   AS = 96.0

#  Number of discretization points in the x-direction.
#  Required: yes
#  Type: long
   NX = 240

#  Number of discretization points in the y-direction.
#  Required: yes
#  Type: long
   NY = 240

#  Number of discretization points in the z-direction.
#  Required: yes
#  Type: long
   NZ = 400

#  Spatial discretization step in the x-direction.
#  Required: yes
#  Type: double
   DX = 0.1

#  Spatial discretization step in the y-direction.
#  Required: yes
#  Type: double
   DY = 0.1

#  Spatial discretization step in the z-direction.
#  Required: yes
#  Type: double
   DZ = 0.1

#  Time discretization step.
#  Required: yes
#  Type: double
   DT = 0.001

#  Laser beam width in x and y direction.
#  Required: yes
#  Type: double
   WX = 52.9218

#  Laser beam width in z direction.
#  Required: yes
#  Type: double
   WZ = 55.3643

#  Effective gravity
#  Required: yes
#  Type: double
   GEFF = 34.0395

#  Amplitude of shaking
#  Required: yes
#  Type: double
   AMP = 0.05

#  frequency of shaking
#  Required: yes
#  Type: double
   OMG = 2.236

#  Number of iterations to introduce the nonlinearity G0.
#  If NSTP = 0, the program need to read the density file: imag3d-den.txt
#  Required: yes
#  Type: long
   NSTP = 0

#  Number of subsequent iterations with fixed nonlinearity G0.
#  Required: yes
#  Type: long
   NPAS = 50000

#  Number of final iterations with fixed nonlinearity GPAR * G0.
#  Required: yes
#  Type: long
   NRUN = 0

#  Output file with the summary of final values of all physical quantities.
#  If not defined, standard output will be used.
#  Required: no
#  Type: string
   OUTPUT = real3d-out

#  Output file with the initial wave function. Only 1D sections along
#  coordinate axes of the wave function are saved, which is designated by a
#  suffix x, y, or z. If not defined, the initial wave function will not be
#  saved.
#  Required: no
#  Type: string
#   INITOUT = real3d-den-init

#  Output file with the wave function obtained after the first NSTP iterations,
#  which introduce nonlinearity G0. Only 1D sections along coordinate axes of
#  the wave function are saved, which is designated by a suffix x, y, or z. If
#  not defined, the wave function will not be saved.
#  Required: no
#  Type: string
#   NSTPOUT = real3d-den-nstp

#  Output file with the wave function obtained after the subsequent NPAS
#  iterations, with the fixed nonlinearity G0. Only 1D sections along
#  coordinate axes of the wave function are saved, which is designated by a
#  suffix x, y, or z. If not defined, the wave function will not be saved.
#  Required: no
#  Type: string
   NPASOUT = real3d-den

#  Output file with the final wave function obtained after the final NRUN
#  iterations. Only 1D sections along coordinate axes of the wave function are
#  saved, which is designated by a suffix x, y, or z. If not defined, the wave
#  function will not be saved.
#  Required: no
#  Type: string
#   NRUNOUT = real3d-den-nrun

#  Output file with the time dependence of RMS during the final NRUN
#  iterations. If not defined, RMS values will not be saved.
#  Required: no
#  Type: string
   RMSOUT = real3d-rms

#  Output file with RMS values during the time evolution. The values are written in
#  subsequent NPAS and final NRUN iterations.
#  Required: no
#  Type: string
   DYNAOUT = real3d-dyna

#  Discretization step in the x-direction used to save wave functions. Required
#  if any of wave function output files (INITOUT, NSTPOUT, NPASOUT, NRUNOUT) is
#  defined.
#  Required: conditionally
#  Type: long
   OUTSTPX = 1

#  Discretization step in the y-direction used to save wave functions. Required
#  if any of wave function output files (INITOUT, NSTPOUT, NPASOUT, NRUNOUT) is
#  defined.
#  Required: conditionally
#  Type: long
   OUTSTPY = 1

#  Discretization step in the z-direction used to save wave functions. Required
#  if any of wave function output files (INITOUT, NSTPOUT, NPASOUT, NRUNOUT) is
#  defined.
#  Required: conditionally
#  Type: long
   OUTSTPZ = 1

#  Time discretization step used to save RMS of the wave function.
#  Required if DYNAOUT is defined.
#  Required: conditionally
#  Type: long
   OUTSTPT = 100
